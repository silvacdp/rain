---
// src/layouts/EventLayout.astro
// This is the layout template for individual event pages
// It receives event data from Airtable and displays it in a structured format

// Import the main Layout component which provides the site header, footer, and global styles
import Layout from './Layout.astro';

// Destructure the event object from Astro.props - this contains all the event data from Airtable
const { event } = Astro.props;

// Function to get the appropriate icon for each event category
// This matches your exact Airtable category values and makes the site more visual
function getCategoryIcon(category: string): string {
  switch (category) {
    case 'Rain/Flood':
      return 'üåßÔ∏è'; // Rain cloud for rain/flood events
    case 'Heatwave':
      return 'üå°Ô∏è'; // Thermometer for extreme heat events
    case 'Wildfire':
      return 'üî•'; // Fire emoji for wildfire events
    case 'Other':
      return '‚ö†Ô∏è'; // Warning triangle for miscellaneous climate events
    default:
      return 'üåç'; // Globe as ultimate fallback
  }
}



// Function to clean URLs by removing angle brackets and whitespace
// Airtable sometimes wraps URLs in < > brackets which breaks the links
function cleanUrl(url: string): string {
  return url.trim()
    .replace(/^</, '')  // Remove opening angle bracket
    .replace(/>$/, ''); // Remove closing angle bracket
}

// Function to format tags for display
// Handles both string and array formats from Airtable
function formatTags(tags: string | string[]): string {
  if (!tags) return '';
  
  // If tags is an array (Airtable's default format), join with commas
  if (Array.isArray(tags)) {
    return tags.join(', ');
  }
  
  // If tags is a string, return as-is
  return tags;
}

// Function to format date ranges in a human-readable way
// Converts "2025-07-07" to "July 7, 2025" or "July 7-10, 2025" for ranges
function formatDateRange(startDate: string, endDate?: string): string {
  if (!startDate) return '';
  
  const start = new Date(startDate);
  const startOptions: Intl.DateTimeFormatOptions = { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  };
  
  // If no end date, just return the start date
  if (!endDate) {
    return start.toLocaleDateString('en-US', startOptions);
  }
  
  const end = new Date(endDate);
  
  // If same month and year, show "July 7-10, 2025"
  if (start.getMonth() === end.getMonth() && start.getFullYear() === end.getFullYear()) {
    return `${start.toLocaleDateString('en-US', { month: 'long' })} ${start.getDate()}-${end.getDate()}, ${start.getFullYear()}`;
  }
  
  // If different months, show "July 7 - August 3, 2025"
  if (start.getFullYear() === end.getFullYear()) {
    return `${start.toLocaleDateString('en-US', { month: 'long', day: 'numeric' })} - ${end.toLocaleDateString('en-US', { month: 'long', day: 'numeric' })}, ${start.getFullYear()}`;
  }
  
  // If different years, show full dates
  return `${start.toLocaleDateString('en-US', startOptions)} - ${end.toLocaleDateString('en-US', startOptions)}`;
}

// Process the formatted date for display
const formattedDate = formatDateRange(event.startDate, event.endDate);

// Format tags for display (handles both string and array formats)
const displayTags = formatTags(event.tags);

// Simple globe emoji for all locations - keeps it clean and consistent
// No need for complex country detection logic
const locationIcon = 'üåç';
---

<!-- Use the main Layout component and pass the event title as the page title -->
<Layout title={event.title}>
  <!-- Main article container for the event content -->
  <article class="event-container">
    
    <!-- Header section with event title and metadata -->
    <header class="event-header">
      <!-- Main event title - this comes from your Airtable 'title' field -->
      <h1 class="event-title">{event.title}</h1>
      
      <!-- Meta information section - only shows if the data exists in Airtable -->
      <div class="event-meta">
        {/* Display formatted date range if available */}
        {formattedDate && <span class="event-date">üìÖ {formattedDate}</span>}
        
        {/* Display location with globe icon */}
        {event.location && (
          <span class="event-location">
            {/* Simple globe icon for all locations */}
            {locationIcon} {event.location}
          </span>
        )}
        
        {/* Display category with appropriate icon */}
        {event.category && (
          <span class="event-category">
            {getCategoryIcon(event.category)} {event.category}
          </span>
        )}
      </div>
    </header>

    <!-- Image section - only displays if an image URL exists in Airtable -->
    {event.imageUrl && (
      <div class="event-image">
        <!-- Main event image with alt text for accessibility -->
        <img src={event.imageUrl} alt={event.title} />
        {/* Optional image source attribution - only shows if imageSource field has data */}
        {event.imageSource && (
        <p class="image-source">
        <a href={event.imageSource} target="_blank" rel="noopener noreferrer">Image Source</a>
        </p>
    )}
    </div>
    )}

    <!-- Quote section - displays an impactful quote from news coverage if available -->
    {event.quote && (
      <blockquote class="event-quote">
        "{event.quote}"
      </blockquote>
    )}

    <!-- Main content section with event summary -->
    <div class="event-content">
      {/* Event summary paragraph - the main description of what happened */}
      {event.summary && <p class="event-summary">{event.summary}</p>}
    </div>

    <!-- Footer section with additional details and source links -->
    <!-- Only shows if at least one of these fields has data -->
    {(event.links || event.tags) && (
      <footer class="event-footer">
        {/* Tags - keywords/categories for the event */}
        {displayTags && <p><strong>Tags:</strong> {displayTags}</p>}
        
<!-- Links section showing as many links as needed -->
{event.links && (
  <div class="event-links">
    <strong>Sources:</strong>
    <div class="links-list">
      {event.links
        .split(',')
        .map((link: string, index: number, arr: string[]) => (
          <>
            <a href={cleanUrl(link)} target="_blank" rel="noopener noreferrer">
              Source {index + 1}
            </a>
            {/* Add slash separator between items except after the last one */}
            {index < arr.length - 1 && <span class="separator"> / </span>}
          </>
        ))}
    </div>
  </div>
)}

      </footer>
    )}
  </article>
</Layout>

<style>
  /* Main container for the entire event page */
  .event-container {
    max-width: 800px; /* Matches your Layout.astro container width */
    margin: 0 auto; /* Centers the container horizontally */
    padding: 0 1rem 2rem; /* Top: 0, sides: 1rem, bottom: 2rem */
    color: var(--white); /* Uses your white color variable from Layout.astro */
  }

  /* Header section styling */
  .event-header {
    margin-bottom: 2rem; /* Space below the header before the next section */
  }

  /* Main event title styling */
  .event-title {
    font-size: 2.2rem; /* Large, prominent title */
    margin-bottom: 1rem; /* Space below title */
    color: var(--white); /* White text using your color variable */
    line-height: 1.2; /* Tighter line height for better readability */
    font-weight: 700; /* Bold font weight */
  }

  /* Container for the metadata (date, location, category) */
  .event-meta {
    display: flex; /* Horizontal layout */
    gap: 1.5rem; /* Space between each meta item */
    flex-wrap: wrap; /* Allows wrapping on smaller screens */
    font-size: 0.9rem; /* Slightly smaller than body text */
    color: var(--platinum); /* Light gray color for less prominence */
    margin-bottom: 1rem; /* Space below meta section */
  }

  /* Individual meta items (date, location, category) */
  .event-meta span {
    display: flex; /* Allows emoji and text to align properly */
    align-items: center; /* Vertically centers emoji with text */
    gap: 0.3rem; /* Small space between emoji and text */
  }

  /* Image section container */
  .event-image {
    margin: 2rem 0; /* Vertical margin above and below */
  }

  /* The actual event image */
  .event-image img {
    width: 100%; /* Full width of container */
    height: auto; /* Maintains aspect ratio */
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0 4px 12px rgba(var(--blackrgb), 0.3); /* Subtle shadow using your black color */
  }

  /* Image source attribution text */
  .image-source {
    font-size: 0.8rem; /* Smaller text for attribution */
    color: var(--platinum); /* Light gray color */
    margin-top: 0.5rem; /* Small space above attribution */
    font-style: italic; /* Italic text to differentiate from main content */
  }

  /* Quote styling - this gets special treatment as an important element */
  .event-quote {
    font-style: italic; /* Italic text for quotes */
    font-size: 1.2rem; /* Slightly larger than body text */
    margin: 2rem 0; /* Generous vertical spacing */
    padding: 1.5rem; /* Internal padding for breathing room */
    border-left: 4px solid var(--orange); /* Orange left border using your brand color */
    background-color: rgba(var(--whitergb), 0.05); /* Very subtle white background */
    border-radius: 0 4px 4px 0; /* Rounded corners except top-left */
    color: var(--white); /* White text */
  }

  /* Main event summary text */
  .event-summary {
    font-size: 1.1rem; /* Slightly larger than default for readability */
    line-height: 1.7; /* Generous line height for easy reading */
    margin-bottom: 2rem; /* Space below summary */
    color: var(--white); /* White text */
  }

.event-links {
    margin-top: 1rem; /* adds space above the source block */
  }

 .links-list {
    display: inline; /* keeps it inline with slashes */
  }

  .links-list a {
    text-decoration: underline;
    color: var(--orange); /* or your preferred color */
  }

  .separator {
    margin: 0 0.25rem;
    color: var(--white); /* optional: same as text color */
  }


  /* Footer section with additional details */
  .event-footer {
    margin-top: 2rem; /* Space above footer */
    padding-top: 2rem
